#!/bin/bash
source ./scripts/utils.sh
source ./scripts/webscan.sh

# Usage 
function usage () {
	log_info "Usage:"
    echo -e "autoWebPentest.sh [-i | -L] <URL|URLs File> -o <output_name>"
    echo -e "\t-i <URL>\t\tFor single URL scan"
    echo -e "\t-L <URLs file>\t\tFor muliples URL in file scan"
    echo -e "\t-o <output_name>\tFor File name Output dir"
    echo -e "\t-h \t\t\tFor Help\n\n"
    echo -e "Made with love by:"
    log_ok "@Fatake"
}

## Checa que tenga parámetros
if [[ ${#} -eq 0 ]]; then
    log_error "Please add the necessary arguments"
    usage;
    exit 1
fi

## Checa que existan los paquetes a ocupar
declare -a packages=("nuclei" "whatweb" "ffuf" "curl")
notinstalled=0;
for package in "${packages[@]}"; do
    if ! command -v $package &> /dev/null; then
        log_error "$package not installed"
        notinstalled=1;
    fi
done

if [[ $notinstalled -eq 1 ]]; then
    exit 1
fi


## Lectura de parámetros 
while getopts :hi:L:o: flag ; do
    case "${flag}" in
        i) url=${OPTARG};;
        L) url_list=${OPTARG};;
        o) output=${OPTARG};;
        h)
			usage
			exit 0;;
        \?)
			log_error "Invalid option:\t -${OPTARG}" 
			usage
			exit 1;;
		:)
			log_error "Option -${OPTARG} requires an argument."
			usage
			exit 1;;
    esac
done

# Verify that only one of -i or -L is used
if [ -n "$url" ] && [ -n "$url_list" ]; then
    log_error "Only one of -i or -L can be used"
    exit 1
fi

if [ -z "$url" ] && [ -z "$url_list" ]; then
    log_error "Either -i or -L is required"
    exit 1
fi

TOOL_PATH=$(pwd)/webPentest_${output}
if [ ! -d "${TOOL_PATH}" ]; then
    log_info "Creating  dir ${TOOL_PATH}"
    run_cmd "mkdir -p ${TOOL_PATH}/"
fi
run_cmd "chown -R 1000:1000 ${TOOL_PATH}/"

if [ -n "$url" ]; then
    log_info "Single URL mode"
    echo "----------------------------"
    analice_URL $url
fi

if [ -n "$url_list" ]; then
    log_info "List of URLs mode"
    echo -e "<------------------------------->\n";
    for t in $(cat $url_list); do
        analice_URL $t
    done;
fi

run_cmd "chown -R 1000:1000 ${TOOL_PATH}/"


## to do testssl